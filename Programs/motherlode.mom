PROGRAM_START
    NOP
    BRB1 GAME_BOOT //Start game at button press
    NOP
    JMP PROGRAM_START
    NOP

GAME_BOOT
    MOV R0 10 //Set player default coordinates
    MOV R1 8
    STR R0 0 //X
    STR R1 1 //Y

    MOV R0 0 //Row
    MOV R1 0 //Col
    MOV RE x00FF //For masking
VMEM_FILL_LOOP
    LFSR R2 //Move random number to R2
    AND R2 R2 RE //Only keep one byte of R2
    MOV RF 125
    CMP R2 RF
    BRN VMEM_FILL_ROCK
    NOP
    MOV R3 x0F //Tile address
    JMP VMEM_FILL_END_LOOP
    NOP
VMEM_FILL_ROCK
    MOV R3 x10 //Tile address
    JMP VMEM_FILL_END_LOOP
    NOP
VMEM_FILL_END_LOOP
    MOV RD 8
    LSL R4 R0 RD
    ADD R4 R4 R1 //R4 contains indexing for vmem
    STRVR R3 R4 //Write tile address
    MOV RD 1
    ADD R1 R1 RD
    MOV RD 21
    CMP R1 RD //Check if col has reached 21
    BRZ VMEM_FILL_RST_X
    NOP
    JMP VMEM_FILL_LOOP
    NOP
VMEM_FILL_RST_X
    MOV R1 0 //Reset col
    MOV RD 1
    ADD R0 RD R0 //add one to row
    MOV RD 17
    CMP R0 RD //Check if row is 17
    BRZ PLACE_PLAYER
    NOP
    JMP VMEM_FILL_LOOP
    NOP

PLACE_PLAYER
    MOV R0 x0D //Player down tile
    STRV R0 x070A
    MOV R0 x7
    STR R0 1
    MOV R0 xA
    STR R0 0

GAMEPLAY_START

MAIN_LOOP
    MOV RF 0
    BRJU JOY_UP
    NOP
    STR RF 102
    BRJD JOY_DOWN
    NOP
    STR RF 103
    BRJR JOY_RIGHT
    NOP
    STR RF 105
    BRJL JOY_LEFT
    NOP
    STR RF 104
    JMP MAIN_LOOP //Restart loop
    NOP

JOY_UP
    MOV RF 1
    LDA R0 102
    CMP RF R0
    BRZ MAIN_LOOP
    NOP
    STR RF 102
    
    MOV R0 3
    MOV R4 0
    MOV R5 -1
    JMP MOVE
    NOP
JOY_DOWN
    MOV RF 1
    LDA R0 103
    CMP RF R0
    BRZ MAIN_LOOP
    NOP
    STR RF 103

    MOV R0 2
    MOV R4 0
    MOV R5 1
    JMP MOVE
    NOP
JOY_RIGHT
    MOV RF 1
    LDA R0 105
    CMP RF R0
    BRZ MAIN_LOOP
    NOP
    STR RF 105

    MOV R0 1
    MOV R4 1
    MOV R5 0
    JMP MOVE
    NOP
JOY_LEFT
    MOV RF 1
    LDA R0 104
    CMP RF R0
    BRZ MAIN_LOOP
    NOP
    STR RF 104

    MOV R0 0
    MOV R4 -1
    MOV R5 0
    JMP MOVE
    NOP

MOVE //R4 should contain delta-x, R5 should contain delta-y, R0 should
    contain direction
    STR R0 2
    LDA R1 0 //X pos
    LDA R2 1 //Y pos

    MOV RF 8
    LSL R3 R2 RF //Shift old y
    ADD R3 R3 R1 //Vmem old pos in R3
    MOV RF x0F
    STRVR RF R3 //Write over old tile

    ADD R1 R1 R4 //New x-pos
    ADD R2 R2 R5 //New y-pos
    STR R1 0
    STR R2 1

    MOV RF 8
    LSL R3 R2 RF //Shift new y
    ADD R3 R3 R1 //Vmem new pos in R3

    MOV RF x0B //Start for player sprites
    ADD RF R0 RF

    STRVR RF R3 //Write over new tile

    JMP MAIN_LOOP
    NOP
